import tkinter as tk
import time
import threading

class AlarmClockApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Alarm Clock")

        self.time_label = tk.Label(root, text="Set alarm time (HH:MM:SS):")
        self.time_label.pack()

        self.time_entry = tk.Entry(root)
        self.time_entry.pack()

        self.set_button = tk.Button(root, text="Set Alarm", command=self.set_alarm)
        self.set_button.pack()

        self.status_label = tk.Label(root, text="")
        self.status_label.pack()

        self.running = False
        self.alarm_thread = None

    def set_alarm(self):
        alarm_time_str = self.time_entry.get()
        try:
            alarm_time = time.strptime(alarm_time_str, "%H:%M:%S")
        except ValueError:
            self.status_label.config(text="Invalid time format. Use HH:MM:SS.")
            return

        current_time = time.localtime()

        alarm_datetime = time.struct_time((
            current_time.tm_year,
            current_time.tm_mon,
            current_time.tm_mday,
            alarm_time.tm_hour,
            alarm_time.tm_min,
            alarm_time.tm_sec,
            current_time.tm_wday,
            current_time.tm_yday,
            current_time.tm_isdst
        ))

        time_diff = time.mktime(alarm_datetime) - time.mktime(current_time)

        if time_diff <= 0:
            self.status_label.config(text="Alarm time should be in the future.")
            return

        self.status_label.config(text=f"Alarm set for {time.strftime('%H:%M:%S', alarm_datetime)}")
        self.start_alarm_thread(time_diff)

    def start_alarm_thread(self, time_diff):
        if self.running:
            self.alarm_thread.join()

        self.running = True
        self.alarm_thread = threading.Thread(target=self.run_alarm, args=(time_diff,))
        self.alarm_thread.start()

    def run_alarm(self, time_diff):
        time.sleep(time_diff)
        self.status_label.config(text="Time to wake up!")
        self.running = False

if __name__ == "__main__":
    root = tk.Tk()
    app = AlarmClockApp(root)
    root.mainloop()
